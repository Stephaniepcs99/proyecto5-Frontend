{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_REVIEW_SAVE_REQUEST, PRODUCT_REVIEW_SAVE_FAIL, PRODUCT_REVIEW_SAVE_SUCCESS } from '../constants/productConstants';\nimport axios from 'axios';\nimport Axios from 'axios';\n/*\r\nconst listProducts = (\r\n  category = '',\r\n  searchKeyword = '',\r\n  sortOrder = ''\r\n) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    const { data } = await axios.get(\r\n      '/api/products?category=' +\r\n        category +\r\n        '&searchKeyword=' +\r\n        searchKeyword +\r\n        '&sortOrder=' +\r\n        sortOrder\r\n    );\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n*/\n\nconst listProducts = () => dispatch => {\n  try {\n    dispatch(PRODUCT_LIST_REQUEST);\n    const {\n      data\n    } = axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      patload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!product._id) {\n      const {\n        data\n      } = await Axios.post('/api/products', product, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put('/api/products/' + product._id, product, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get('/api/products/' + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteProduct = productId => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.delete('/api/products/' + productId, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProductReview = (productId, review) => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo: {\n          token\n        }\n      }\n    } = getState();\n    dispatch({\n      type: PRODUCT_REVIEW_SAVE_REQUEST,\n      payload: review\n    });\n    const {\n      data\n    } = await axios.post(`/api/products/${productId}/reviews`, review, {\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    });\n    dispatch({\n      type: PRODUCT_REVIEW_SAVE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    // report error\n    dispatch({\n      type: PRODUCT_REVIEW_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct, deleteProduct, saveProductReview };","map":{"version":3,"sources":["C:/Users/mi pc/OneDrive/Documentos/Curso FullStack/node-react-ecommerce/frontend/src/actions/productActions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_REVIEW_SAVE_REQUEST","PRODUCT_REVIEW_SAVE_FAIL","PRODUCT_REVIEW_SAVE_SUCCESS","axios","Axios","listProducts","dispatch","data","get","type","patload","error","payload","message","saveProduct","product","getState","userSignin","userInfo","_id","post","headers","Authorization","token","put","detailsProduct","productId","deleteProduct","delete","success","saveProductReview","review"],"mappings":"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","sourcesContent":["import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_SAVE_REQUEST,\r\n  PRODUCT_SAVE_SUCCESS,\r\n  PRODUCT_SAVE_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_REVIEW_SAVE_REQUEST,\r\n  PRODUCT_REVIEW_SAVE_FAIL,\r\n  PRODUCT_REVIEW_SAVE_SUCCESS,\r\n} from '../constants/productConstants';\r\nimport axios from 'axios';\r\nimport Axios from 'axios';\r\n/*\r\nconst listProducts = (\r\n  category = '',\r\n  searchKeyword = '',\r\n  sortOrder = ''\r\n) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    const { data } = await axios.get(\r\n      '/api/products?category=' +\r\n        category +\r\n        '&searchKeyword=' +\r\n        searchKeyword +\r\n        '&sortOrder=' +\r\n        sortOrder\r\n    );\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n*/\r\n\r\nconst listProducts = () => (dispatch) => {\r\n\r\n  try {\r\n    dispatch(PRODUCT_LIST_REQUEST);\r\n    const { data } = axios.get(\"/api/products\");\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, patload: data });\r\n  }\r\n  catch (error) {\r\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message })\r\n  }\r\n}\r\n\r\nconst saveProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_SAVE_REQUEST, payload: product });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    if (!product._id) {\r\n      const { data } = await Axios.post('/api/products', product, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + userInfo.token,\r\n        },\r\n      });\r\n      dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\r\n    } else {\r\n      const { data } = await Axios.put(\r\n        '/api/products/' + product._id,\r\n        product,\r\n        {\r\n          headers: {\r\n            Authorization: 'Bearer ' + userInfo.token,\r\n          },\r\n        }\r\n      );\r\n      dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_SAVE_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst detailsProduct = (productId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n    const { data } = await axios.get('/api/products/' + productId);\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_DETAILS_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst deleteProduct = (productId) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n    const { data } = await axios.delete('/api/products/' + productId, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + userInfo.token,\r\n      },\r\n    });\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS, payload: data, success: true });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst saveProductReview = (productId, review) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userSignin: {\r\n        userInfo: { token },\r\n      },\r\n    } = getState();\r\n    dispatch({ type: PRODUCT_REVIEW_SAVE_REQUEST, payload: review });\r\n    const { data } = await axios.post(\r\n      `/api/products/${productId}/reviews`,\r\n      review,\r\n      {\r\n        headers: {\r\n          Authorization: 'Bearer ' + token,\r\n        },\r\n      }\r\n    );\r\n    dispatch({ type: PRODUCT_REVIEW_SAVE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    // report error\r\n    dispatch({ type: PRODUCT_REVIEW_SAVE_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\nexport {\r\n  listProducts,\r\n  detailsProduct,\r\n  saveProduct,\r\n  deleteProduct,\r\n  saveProductReview,\r\n};"]},"metadata":{},"sourceType":"module"}