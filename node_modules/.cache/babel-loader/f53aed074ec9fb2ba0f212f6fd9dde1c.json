{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING, CART_SAVE_PAYMENT } from \"../constants/cartConstants\";\n/*function cartReducer(state = { cartItems: [], shipping: {}, payment: {} }, action) {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n      const product = state.cartItems.find(x => x.product === item.product);\r\n      if (product) {\r\n        return {\r\n          cartItems:\r\n            state.cartItems.map(x => x.product === product.product ? item : x)\r\n        };\r\n      }\r\n      return { cartItems: [...state.cartItems, item] };\r\n    case CART_REMOVE_ITEM:\r\n      return { cartItems: state.cartItems.filter(x => x.product !== action.payload) };\r\n    case CART_SAVE_SHIPPING:\r\n      return { ...state, shipping: action.payload };\r\n    case CART_SAVE_PAYMENT:\r\n      return { ...state, payment: action.payload };\r\n    default:\r\n      return state\r\n  }\r\n}*/\n\nfunction cartReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cartItems: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const product = state.cartItems.find(x => x.product === item.product); //si el producto existe\n\n      if (product) {\n        return {\n          cartItems: state.cartItems.map(x => x.product === product.product ? item : x)\n        };\n      }\n\n      return {\n        cartItems: [...state.cartItems, item]\n      };\n\n    default:\n    case CART_REMOVE_ITEM:\n      return {\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n      return state;\n  }\n}\n\nexport { cartReducer };","map":{"version":3,"sources":["C:/Users/mi pc/OneDrive/Documentos/Curso FullStack/node-react-ecommerce/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING","CART_SAVE_PAYMENT","cartReducer","state","cartItems","action","type","item","payload","product","find","x","map","filter"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,EAA0CC,kBAA1C,EAA8DC,iBAA9D,QAAuF,4BAAvF;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,GAAuD;AAAA,MAAlCC,KAAkC,uEAA1B;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAA0B;AAAA,MAARC,MAAQ;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,aAAL;AACE,YAAMS,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,OAAO,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACF,OAAF,KAAcF,IAAI,CAACE,OAA7C,CAAhB,CAFF,CAGE;;AACA,UAAIA,OAAJ,EAAa;AACX,eAAO;AACLL,UAAAA,SAAS,EACRD,KAAK,CAACC,SAAN,CAAgBQ,GAAhB,CAAoBD,CAAC,IAAIA,CAAC,CAACF,OAAF,KAAcA,OAAO,CAACA,OAAtB,GAAgCF,IAAhC,GAAuCI,CAAhE;AAFI,SAAP;AAID;;AACD,aAAO;AAAEP,QAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAAb,OAAP;;AACA;AACE,SAAKR,gBAAL;AACF,aAAO;AAAEK,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,MAAhB,CAAuBF,CAAC,IAAIA,CAAC,CAACF,OAAF,KAAcJ,MAAM,CAACG,OAAjD;AAAb,OAAP;AAEA,aAAOL,KAAP;AAhBJ;AAkBD;;AAED,SAASD,WAAT","sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING, CART_SAVE_PAYMENT } from \"../constants/cartConstants\";\r\n\r\n/*function cartReducer(state = { cartItems: [], shipping: {}, payment: {} }, action) {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n      const product = state.cartItems.find(x => x.product === item.product);\r\n      if (product) {\r\n        return {\r\n          cartItems:\r\n            state.cartItems.map(x => x.product === product.product ? item : x)\r\n        };\r\n      }\r\n      return { cartItems: [...state.cartItems, item] };\r\n    case CART_REMOVE_ITEM:\r\n      return { cartItems: state.cartItems.filter(x => x.product !== action.payload) };\r\n    case CART_SAVE_SHIPPING:\r\n      return { ...state, shipping: action.payload };\r\n    case CART_SAVE_PAYMENT:\r\n      return { ...state, payment: action.payload };\r\n    default:\r\n      return state\r\n  }\r\n}*/\r\nfunction cartReducer(state = { cartItems: []}, action) {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n      const product = state.cartItems.find(x => x.product === item.product);\r\n      //si el producto existe\r\n      if (product) {\r\n        return {\r\n          cartItems: \r\n           state.cartItems.map(x => x.product === product.product ? item : x)\r\n        };\r\n      }\r\n      return { cartItems: [...state.cartItems, item] };\r\n      default:\r\n        case CART_REMOVE_ITEM:\r\n      return { cartItems: state.cartItems.filter(x => x.product !== action.payload) };\r\n    \r\n      return state\r\n    }\r\n}\r\n\r\nexport { cartReducer }"]},"metadata":{},"sourceType":"module"}